Week of 2/15:
I've been working through Thm Proving in Lean, although we're still stuck in the "defining things properly" phase.

I'm sort of stuck on how to define a graph so that it works best in the long run. 
We currently have graph defined via a binary relation, but I'm not sure if that will be the best definition of a graph to use in the long run.
I've created a new file where I'm trying to redefine everything using sets. The main advantage that this will have is that when we're building a retract we can easily define the output graph (just the vertex set minus the corner).


Week of 2/22:
Still reading Thm Proving in Lean, although I am doing more of learning as I go.

I was experimenting with using instances of fintypes but I was looking at the mathlib documentation for simple graphs and they didn't have it. There are some questions I had that arose that I want to discuss with you.
I made sure that the cop and robber moves were legal, which was one of our priorities for this week. I also set up a list of cop and robber moves. I also want to make a list_legal that says that cop_strat (list.head list_of_moves) = list.head list.tail list_of_moves, but that's giving me a syntax error I want to go over with.
I also made progress on defining retracts but I can't seem to avoid this syntax error that doesnt recognize subtypes. Is the notation you used only restricted to fintypes? It doesn't seem to be when I checked. 
